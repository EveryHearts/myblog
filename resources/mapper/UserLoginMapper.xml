<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.welfareZhu.item.myblog.dao.UserLoginDao">

    <cache-ref namespace="cn.welfareZhu.item.myblog.dao.UserSearchDao"/>

    <resultMap id="userLoginMap" type="cn.welfareZhu.item.myblog.model.UserLogin">
        <id property="userId" column="user_id"/>
        <result property="userAuth" column="user_auth"/>
        <result property="userPassword" column="user_password"/>
        <result property="userSecurityCode" column="user_security_code"/>
        <result property="userAccount" column="user_account"/>
        <result property="userStatus" column="user_status"/>
        <result property="createDate" column="create_date"/>
        <result property="modifyDate" column="modify_date"/>
    </resultMap>

    <select id="selectUserAuthByUserId" parameterType="Integer" resultType="Integer">
        select user_auth from user_login where user_id = #{userId}
    </select>

    <select id="selectUserStatusByUserId" parameterType="Integer" resultType="Integer">
        select user_status from user_login where user_id = #{userId}
    </select>

    <select id="selectUserLoginByAccountAndPassword" resultMap="userLoginMap">
        select * from user_login where user_account = #{account} and user_password = #{password}
    </select>

    <select id="selectUserLoginByUserId" parameterType="Integer" resultMap="userLoginMap">
        select * from user_login where user_id = #{userId}
    </select>

    <select id="selectUserIdByUserAuthAndStatus" resultType="Integer">
        select user_id from user_login where user_auth = #{auth} and user_status = #{status} order by modify_date desc , create_date desc
    </select>

    <insert id="insertUserLogin" parameterType="cn.welfareZhu.item.myblog.model.UserLogin">
        insert into user_login (
        user_id,user_auth,user_password,user_security_code,user_account,user_status,create_date,modify_date
        )values (
        #{userId},#{userAuth},#{userPassword},#{userSecurityCode},#{userAccount},#{userStatus},#{createDate},#{modifyDate}
        )
    </insert>

    <update id="updateUserLogin" parameterType="cn.welfareZhu.item.myblog.model.UserLogin">
        update user_login
        <set>
            <if test="userAuth != null and userAuth != ''">user_auth = #{userAuth},</if>
            <if test="userPassword != null">user_password = #{userPassword},</if>
            <if test="userSecurityCode != null">user_security_code = #{userSecurityCode},</if>
            <if test="userAccount != null">user_account = #{userAccount},</if>
            <if test="userStatus != null and userStatus != ''">user_status = #{userStatus},</if>
            modify_date = now()
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserStatus">
        update user_login set user_status = #{status} where user_id = #{userId}
    </update>

    <select id="countUserByUserAccount" parameterType="String" resultType="int">
        select count(*) from user_login where user_account = #{account}
    </select>

</mapper>